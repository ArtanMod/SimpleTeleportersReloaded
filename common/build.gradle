dependencies {
    // We depend on fabric loader here to use the fabric @Environment annotations and get the mixin dependencies
    // Do NOT use other classes from fabric loader
    modImplementation "net.fabricmc:fabric-loader:${rootProject.fabric_loader_version}"
    // Remove the next line if you don't want to depend on the API
    modApi "dev.architectury:architectury:${rootProject.architectury_version}"
}

architectury {
    common("fabric", "forge")
}

boolean inWorkspaceBaseMod = findProject(':ArtanCoreMod') != null
repositories {
    if(inWorkspaceBaseMod) {
        flatDir {
            dirs findProject(':ArtanCoreMod:fabric').getProjectDir().toPath().resolve("build/libs")
            dirs findProject(':ArtanCoreMod:forge').getProjectDir().toPath().resolve("build/libs")
        }
    }
}

Path fabricLibsPath = findProject(':ArtanCoreMod:fabric').getProjectDir().toPath().resolve("build/libs") as Path
dependencies {
    if(inWorkspaceBaseMod && Boolean.parseBoolean(is_local_artan_core)) {
        implementation files(file(fabricLibsPath.resolve("Artan'sProjectCoreMOD-mc${minecraft_version}-${artan_core_local_version}-dev-shadow.jar")))
    } else {
        implementation fg.deobf("curse.maven:artancore-585454:" + artan_core_version)
    }

    // JEI
    modCompileOnlyApi "mezz.jei:jei-${minecraft_version}-common-api:${jei_version}"
}

publishing {
    publications {
        mavenCommon(MavenPublication) {
            artifactId = archives_base_name
            from components.java
        }
    }

    // See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
    repositories {
        // Add repositories to publish to here.
    }
}
